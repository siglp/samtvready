# converted file name suffix
converted_file_name_suffix="-SamTVReady"
converted_title_suffix=" converted for Samsung TV 2018+"

# report file location
report_file_location="/opt/samtvready/report"

# working dir
# not empty - location into which source file will be copied or moved, everything will be converted there and as final it will be copied to original dir
#working_dir_location="/opt/samtvready/work"
# empty - work in file directory
working_dir_location=""
# if file size is bellow this value in bytes, working dir will NOT be ever used
min_file_size_for_using_working_dir=10000000000
# if file size is above this value in bytes, working dir will NOT be ever used
max_file_size_for_using_working_dir=100000000000

# number of ffmpeg threads to use - number - 0 means optimal
ffmpeg_threads=0

# input fileadditional params for ffmpeg
# libx
ffmpeg_input_params="-nostdin -fflags +genpts"
# nvenc
#ffmpeg_input_params="-nostdin -fflags +genpts -hwaccel auto"

# --- VIDEO ---
# video codecs, that we "want support" - can be more (for more details use: ffmpeg -codecs)
supported_video_codecs="hevc,h264,av1" 
# constants - configuration "remove" / "convert" / "copy" (default if nothing or bad value) / "report"
unsupported_video="convert"
# conversion params for ffmpeg
# libx
unsupported_video_480p_params="-preset slow -vcodec libx264 -cq 19 -vf 'pad=ceil(iw/2)*2:ceil(ih/2)*2' -pix_fmt yuv420p"
unsupported_video_576p_params="-preset slow -vcodec libx264 -cq 20 -vf 'pad=ceil(iw/2)*2:ceil(ih/2)*2' -pix_fmt yuv420p"
unsupported_video_720p_params="-preset slow -vcodec libx264 -cq 21 -vf 'pad=ceil(iw/2)*2:ceil(ih/2)*2' -pix_fmt yuv420p"
unsupported_video_1080p_params="-preset slow -vcodec libx265 -cq 22 -vf 'pad=ceil(iw/2)*2:ceil(ih/2)*2' -pix_fmt yuv420p"
unsupported_video_2160p_params="-preset slow -vcodec libx265 -cq 24 -vf 'pad=ceil(iw/2)*2:ceil(ih/2)*2' -pix_fmt yuv420p"
# nvenc
#unsupported_video_480p_params="-preset slow -vcodec h264_nvenc -cq 19 -vf 'pad=ceil(iw/2)*2:ceil(ih/2)*2' -pix_fmt yuv420p"
#unsupported_video_576p_params="-preset slow -vcodec h264_nvenc -cq 20 -vf 'pad=ceil(iw/2)*2:ceil(ih/2)*2' -pix_fmt yuv420p"
#unsupported_video_720p_params="-preset slow -vcodec h264_nvenc -cq 21 -vf 'pad=ceil(iw/2)*2:ceil(ih/2)*2' -pix_fmt yuv420p"
#unsupported_video_1080p_params="-preset slow -vcodec hevc_nvenc -cq 22 -vf 'pad=ceil(iw/2)*2:ceil(ih/2)*2' -pix_fmt yuv420p"
#unsupported_video_2160p_params="-preset slow -vcodec hevc_nvenc -cq 24 -vf 'pad=ceil(iw/2)*2:ceil(ih/2)*2' -pix_fmt yuv420p"
# report VOB files
report_vob_files=true
# mux without video
mux_without_video=false

# --- AUDIO ---
# audio codecs, that we "want support" - can be more (for more details use: ffmpeg -codecs)
supported_audio_codecs="aac,aac_latm,ac3,eac3,mp3"
# constants - configuration "remove" / "convert" / "copy" (default if nothing or bad value) / "report"
unsupported_audio="convert"
# conversion params for ffmpeg
unsupported_audio_lq_acodec="-acodec aac -b:a 256k"
unsupported_audio_sq_acodec="-acodec eac3 -b:a 768k"
unsupported_audio_hq_acodec="-acodec eac3 -b:a 1536k -ac 6"
# border for lq vs sq in bit/s
lq_sq_bitrate_border=256000
# mux without audio
mux_without_audio=false

# --- SUBTITLE ---
# subtitle codecs, that we "want support" - can be more (for more details use: ffmpeg -codecs)
supported_subtitles_codecs="subrip,srt,ass,ssa,dvd_subtitle"
# constants - configuration "remove" / "convert" / "copy" (default if nothing or bad value) / "report"
unsupported_subtitles="remove"
# conversion params for ffmpeg
unsupported_subtitles_conversion_params=""

# keep original file?
keep_original_file=false

# save original streams into defined dir?
save_original_streams=true
original_streams_dir="0-original-streams"

# add .nomedia in original streams dir
add_nomedia_file=true
nomedia_file_name=".nomedia"

# clean temp files (delete help files)
clean_temp_files=true

# loglevel "TRACE", "DEBUG", "INFO", "WARNING", "ERROR", "HIGHEST"
loglevel="INFO"

# logstyle "BFU" / "DEVEL"
logstyle="BFU"
